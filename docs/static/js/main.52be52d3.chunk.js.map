{"version":3,"sources":["firebase/firebase-congif.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NoteAppBar.js","components/notes/NoteScreen.js","components/jornual/NothingSelecter.js","actions/ui.js","actions/auth.js","components/jornual/JornualEntry.js","components/jornual/JornualEntries.js","components/jornual/SiderBar.js","components/jornual/JornualScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JornualApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","starLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestone","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NoteAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","showConfirmButton","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","delete","startDeleting","NothingSelecter","setError","err","finishLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","console","log","message","logout","JornualEntry","date","noDate","moment","backgroundSize","backgroundImage","format","JornualEntries","map","key","SiderBar","signOut","newNote","Date","getTime","add","JornualScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailAndPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JornualApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.52be52d3.chunk.js","sourcesContent":["import firebase  from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDoZ94VjCFgKY2qeYvpzfNgGS44Y3k6hu4\",\n    authDomain: \"diario-95d22.firebaseapp.com\",\n    projectId: \"diario-95d22\",\n    storageBucket: \"diario-95d22.appspot.com\",\n    messagingSenderId: \"295278916559\",\n    appId: \"1:295278916559:web:5bc03e17e1d5c916b058ba\",\n    measurementId: \"G-QFX167BQVZ\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export{\n      db,\n      googleAuthProvider,\n      firebase\n  }","\nexport const fileUpload = async(file)=>{\n\n    const cloudUrl= 'https://api.cloudinary.com/v1_1/chrostyburguer/upload';\n\n    const formData =  new FormData();\n    formData.append('upload_preset','react-diario');\n    formData.append('file',file);\n\n    try {\n        const resp = await fetch(cloudUrl,{\n            method:'POST',\n            body: formData\n        });\n\n        if (resp.ok) {\n            const cloudResp = await resp.json();\n            return cloudResp.secure_url;\n        }else{\n            throw await resp.json();\n        }\n    } catch (error) {\n        throw error;\n    }\n}","import { db } from \"../firebase/firebase-congif\"\n\n\nexport const loadNotes = async(uid)=>{\n\n  const notesSnap = await db.collection(`${uid}/jornual/notes`).get();\n  const notes = [];\n  notesSnap.forEach(snapHijo=>{\n      //console.log(snapHijo.data());\n      notes.push({\n          id: snapHijo.id,\n          ...snapHijo.data()\n      })\n  });\n\n  //console.log(notes);\n  return notes;\n}","export const types = {\n    login:'[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError:'[UI] Set error',\n    uiRemoveError:'[UI] Remove error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Nodes] New note',\n    notesActive: '[Nodes] Set active note',\n    notesLoad: '[Nodes] Load notes',\n    notesUpdated: '[Nodes] Update note',\n    notesFileUrl: '[Nodes] Updated image url',\n    notesDelete: '[Nodes] Delete note',\n    notesLogoutCleaning: '[Nodes] Logout Cleaning',\n\n\n}","import Swal from 'sweetalert2';\nimport { db } from \"../firebase/firebase-congif\";\nimport { fileUpload } from '../helpers/fileUpload';\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\nexport const startNewNote= ()=>{\n    return async(dispatch,getState)=>{\n\n        const uid= getState().auth.uid\n\n        //console.log(uid);\n\n        const newNote= {\n            title: '',\n            body:'',\n            date: new Date().getTime()\n        }\n\n        const doc = await db.collection(`${uid}/jornual/notes`).add(newNote);\n        dispatch(activeNote(doc.id, newNote));\n        dispatch(addNewNote(doc.id, newNote));\n    }\n\n}\nexport const activeNote= (id,note)=>({\n    type:types.notesActive,\n    payload:{\n        id,\n        ...note\n    }\n\n});\n\nexport const addNewNote=(id,note)=>({\n    type:types.notesAddNew,\n    payload:{\n        id, ...note\n    }\n})\n\nexport const starLoadingNotes=(uid)=>{\n    return async(dispatch)=>{\n        const notes=  await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n}\n\nexport const setNotes= (notes)=>({\n    type: types.notesLoad,\n    payload: notes\n});\n\nexport const startSaveNote= (note)=>{\n    return async(dispatch,getState)=>{\n\n        const uid= getState().auth.uid\n\n        if (!note.url) {\n            delete note.url;\n        }\n        const noteToFirestone = {...note};\n        delete noteToFirestone.id;\n\n        await db.doc(`${uid}/jornual/notes/${note.id}`).update(noteToFirestone);\n        dispatch(refreshNote(note.id, noteToFirestone));\n        Swal.fire('saved', note.title, 'success');\n    }\n}\n\nexport const refreshNote=(id,note)=>({\n    type: types.notesUpdated,\n    payload:{\n        id, \n        note:{\n            id,\n            ...note\n        }\n    }\n})\n\nexport const startUploading = (file)=>{\n    return async(dispatch, getState)=>{\n        const {active:activeNote} = getState().notes;\n        Swal.fire({\n            title: 'Uploading...',\n            text: 'Please my Queen wait...',\n            showConfirmButton: false,\n            onBeforeOpen:()=>{\n                Swal.showLoading();\n            }\n        })\n        const fileUrl = await fileUpload(file);\n        activeNote.url = fileUrl;\n        dispatch(startSaveNote(activeNote))\n        //console.log(fileUrl);\n        Swal.close();\n    }\n}\n\nexport const startDeleting=(id)=>{\n    return async(dispatch, getState)=>{\n        const uid= getState().auth.uid;\n        await db.doc(`${uid}/jornual/notes/${id}`).delete();\n\n        dispatch(deleteNote(id));\n\n    }\n}\n\nexport const deleteNote=(id)=>({\n    type: types.notesDelete,\n    payload: id\n});\n\nexport const noteLoout=()=>({\n    type:types.notesLogoutCleaning\n});","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = (newFormState=initialState) => {\n        setValues( newFormState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes'\n\nexport const NoteAppBar = () => {\n    \n    //react-diario\n    const dispatch = useDispatch();\n    const {active} = useSelector(state => state.notes);\n    const handleSave=()=>{\n        dispatch(startSaveNote(active));\n    }\n    const handlePictureClick=()=>{\n        document.querySelector('#fileSelector').click();\n    }\n    const handleFileChange=(e)=>{\n        const file = e.target.files[0];\n        if (file) {\n            dispatch(startUploading(file));\n        }\n    }\n\n    return (\n        <div className=\"notes__appbar\">\n            <span>19 de Octubre</span>\n            <input\n            id=\"fileSelector\"\n            type=\"file\"\n            name=\"file\"\n            style={{display:'none'}}\n            onChange={handleFileChange}\n            />\n            <div>\n                <button className=\"btn\" onClick={handlePictureClick}>picture</button>\n                <button className=\"btn\" onClick={handleSave} >save</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { activeNote, startDeleting } from '../../actions/notes';\nimport { useForm } from '../../hooks/useForm';\nimport { NoteAppBar } from './NoteAppBar'\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n    const {active:note} = useSelector(state => state.notes);\n    const [formValues, handleInputChange, reset]=useForm(note);\n    const {body,title,id} = formValues;\n    const activeId= useRef(note.id);\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note)\n            activeId.current = note.id\n        }\n    }, [note, reset])\n\n    useEffect(() => {\n        dispatch(activeNote(formValues.id,{...formValues}));\n    }, [formValues, dispatch])\n\n    const handleDelete=()=>{\n        dispatch(startDeleting(id));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n            <NoteAppBar/>\n            <div className=\"notes__content\">\n                <input className=\"notes__title-input\" name=\"title\" value={title} onChange={handleInputChange} type=\"text\" placeholder=\"Some awesome title\"/>\n                <textarea className=\"notes__textarea\" name=\"body\" value={body} onChange={handleInputChange} placeholder=\"what happend today\">\n                </textarea>\n                {\n                    (note.url) &&\n                    (<div className=\"notes__image\">\n                        <img src={note.url} alt=\"description\"  />\n                    </div>)\n                }\n            </div>\n            <button className=\"btn btn-danger\" onClick={handleDelete}>\n                Delete\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelecter = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                select something\n                <br/>\n                by create an entry!\n            </p>\n            <i className=\"far fa-star fa-4x mt-5\">\n            </i>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const setError =( err ) =>({\n    type: types.uiSetError,\n    payload: err,\n});\n\nexport const removeError =() =>({\n    type: types.uiRemoveError,\n});\n\nexport const startLoading = ()=>({\n    type: types.uiStartLoading,\n});\nexport const finishLoading = ()=>({\n    type: types.uiFinishLoading,\n});\n","import Swal from 'sweetalert2';\nimport { types } from \"../types/types\";\nimport { firebase, googleAuthProvider } from '../firebase/firebase-congif';\nimport { finishLoading, startLoading } from \"./ui\";\nimport { noteLoout } from './notes';\n\nexport const startLoginEmailPassword = (email,password)=>{\n    return (dispatch)=>{\n        dispatch(startLoading());\n\n        firebase.auth().signInWithEmailAndPassword(email,password)\n        .then(({user})=>{\n            dispatch(login(user.uid, user.displayName));\n            dispatch(finishLoading());\n        }).catch(e=>{\n            console.log(e);\n            dispatch(finishLoading());\n            Swal.fire('Error', e.message, 'error');\n        })\n    }\n}\n\nexport const startRegisterWithEmailAndPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase.auth().createUserWithEmailAndPassword(email,password)\n        .then(async({user})=>{\n             await user.updateProfile({ displayName: name});\n            dispatch(\n                login(user.uid, user.displayName)\n            )\n        }).catch(e=>{\n            console.log(e);\n            Swal.fire('Error', e.message, 'error');\n        })\n    }\n\n}\n\nexport const startGoogleLogin=()=>{\n    return(dispatch)=>{\n        firebase.auth().signInWithPopup(googleAuthProvider)\n        .then(({user})=>{\n            dispatch(\n                login(user.uid, user.displayName)\n            )\n        });\n    }\n}\n\n\nexport const login = (uid, displayName)=>({\n        type: types.login,\n        payload:{\n            uid,\n            displayName\n        }\n});\n\nexport const starLogout= ()=>{\n    return async(dispatch)=>{\n        await firebase.auth().signOut();\n        dispatch(logout());\n        dispatch(noteLoout());\n    }\n};\n\nexport const logout = ()=>({\n    type: types.logout\n});\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JornualEntry = ({id,date,title,body,url}) => {\n\n    const noDate= moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick =()=>{\n        dispatch(activeNote(id,{\n            date,title, body,url\n        }));\n    }\n\n    return (\n        <div className=\"jornual__entry pointer animate__animated animate__fadeIn animete_faster\" onClick={handleEntryClick} >\n            \n           { \n            url &&\n           <div className=\"jornual__entry-picture\" style={{\n                backgroundSize:'cover',\n                backgroundImage:` url(${url})`\n            }}></div>\n            }\n\n            <div className=\"jornual__entry-body\">\n                <p className=\"jornual__entry-title\">\n                   {title}\n                </p>\n                <p className=\"jornual__entry-content\">\n                    {body}\n                </p>\n            </div>\n            <div className=\"jornual__entry-date-box\">\n                <span>{noDate.format('dddd')}</span>\n                <h4>{noDate.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JornualEntry } from './JornualEntry';\n\nexport const JornualEntries = () => {\n\n    const {notes} = useSelector(state => state.notes)\n    //const entries = [1,2,3,4,5,6,7,8,9,10];\n    return (\n        <div className=\"jornual__entries \">\n            {\n                notes.map( note=>(\n                    <JornualEntry key={note.id} {...note}  />\n                ))\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { starLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JornualEntries } from './JornualEntries'\n\nexport const SiderBar = () => {\n\nconst dispatch = useDispatch();\nconst {name} = useSelector(state => state.auth)\n\nconst handleLogout= ()=>{\n    dispatch(starLogout())\n}\n\nconst handleAddNew= ()=>{\n    dispatch(startNewNote());\n}\n\n    return (\n        <aside className=\"jornual__sidebar\">\n            <div className=\"jornual__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i> \n                    <span> {name}</span>\n                </h3>\n                <button className=\"btn\" onClick={handleLogout} >\n                    logout\n                </button>\n            </div>\n            <div className=\"jornual__new-entry\" onClick={handleAddNew} >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">new entry</p>\n            </div>\n            <JornualEntries/>\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelecter } from './NothingSelecter'\nimport { SiderBar } from './SiderBar'\n\nexport const JornualScreen = () => {\n\n    const {active} = useSelector(state => state.notes)\n    return (\n        <div className=\"jornual__main-content animate__animated animate__fadeIn animete_faster\">\n            <SiderBar/>\n                <main>\n                    {\n                        (active)?(<NoteScreen/>):(<NothingSelecter/>)\n                    }\n                </main>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { useForm } from '../../hooks/useForm'\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const {loading} = useSelector(state => state.ui)\n\n    const [formValues, handleInputChange] = useForm({\n        email:'adriana.b@gmail.com',\n        password: '123456'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin =(e)=>{\n        e.preventDefault();\n        //console.log(email, password);\n        dispatch(startLoginEmailPassword(email, password));\n    }\n\n    const handleGoogleLogin = () =>{\n        dispatch(startGoogleLogin() );\n    }\n\n\n    return (\n        <div>\n            <h3 className=\"auth__title\">Login</h3>\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animete_faster\">\n                <label className=\"auth__label\">Email </label>\n                <input className=\"auth__input\" type=\"text\" value={email} onChange={handleInputChange} placeholder=\"  Email\" name=\"email\" />\n                <label className=\"auth__label\">Password </label>\n                <input className=\"auth__input\" type=\"password\" value={password} onChange={handleInputChange}  placeholder=\"  Password\" name=\"password\" />\n            \n            <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading } >\n                Ingresar\n            </button>\n\n            <div className=\"auth__social-networks\">\n                <p className=\"auth__social-title\">Sign in with</p>\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\n                    <div className=\"google-icon-wrapper\">\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                    </div>\n                    <p className=\"btn-text\">\n                        <b>Sign in with google</b>\n                    </p>\n                </div>\n            </div>\n            <Link to=\"/auth/register\" className=\"link\">\n                Create new account\n            </Link>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../actions/ui';\nimport { startRegisterWithEmailAndPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n\n    const dispatch = useDispatch();\n    const {msgError}= useSelector(state => state.ui)\n\n    const [ formValues, handleInputChange ] = useForm({\n        name: 'adriana',\n        email: 'adriana.b@gmail.com',\n        password: '123456',\n        password2: '123456',\n    })\n\n    const {name,email,password,password2}= formValues;\n\n \n    const handleRegister = (e) => {\n        e.preventDefault();\n        if (isFormValid()){\n            dispatch(startRegisterWithEmailAndPasswordName(email, password, name));\n        }\n    }\n\n    const isFormValid = ()=>{\n        if(name.trim().length === 0){\n            dispatch(setError('name is required'))\n            return false;\n        }else if (!validator.isEmail(email)){\n            dispatch(setError('email is no valid'))\n            return false;\n        }else if ( password !== password2 || password.length < 5){\n            dispatch(setError('password should be at least 6 characters and match each other '))\n            return false;\n        }\n        dispatch(removeError() );\n        return true;\n    }\n\n    return (\n        <div>\n        <h3 className=\"auth__title\">Register</h3>\n        <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animete_faster\">\n            {msgError &&(<div className=\"auth__alert-error\">{msgError}</div>)}\n            <label className=\"auth__label\">Nombre </label>\n            <input className=\"auth__input\" type=\"text\" placeholder=\"  Name\" name=\"name\" value={name} onChange={handleInputChange} />\n            <label className=\"auth__label\">Email </label>\n            <input className=\"auth__input\" type=\"text\" placeholder=\"  Email\" name=\"email\" value={email} onChange={handleInputChange}  />\n            <label className=\"auth__label\">Password </label>\n            <input className=\"auth__input\" type=\"password\" placeholder=\"  Password\" name=\"password\" value={password} onChange={handleInputChange}  />\n            <label className=\"auth__label\">Confirm Password </label>\n            <input className=\"auth__input\" type=\"password\" placeholder=\"  Confirm Password\" name=\"password2\" value={password2} onChange={handleInputChange}  />\n        \n        <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\"  >\n            Register\n        </button>\n        <Link to=\"/auth/login\" className=\"link mt-5\">\n            Already register?\n        </Link>\n        </form>\n    </div>\n    )\n}\n","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { LoginScreen } from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route path=\"/auth/login\" component={ LoginScreen } />\n                    <Route path=\"/auth/register\" component={ RegisterScreen } />\n                    <Redirect to=\"/auth/login\" />\n                </Switch> \n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\n  \nimport {firebase} from '../firebase/firebase-congif';\nimport { JornualScreen } from '../components/jornual/JornualScreen';\nimport { AuthRouter } from './AuthRouter';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { starLoadingNotes } from '../actions/notes';\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch()\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n        useEffect(() => {\n            firebase.auth().onAuthStateChanged(async(user)=>{\n                if (user?.uid) {\n                    dispatch(login(user.uid, user.displayName));\n                    setIsLoggedIn(true);\n                   dispatch(starLoadingNotes(user.uid));\n                }else{\n                    setIsLoggedIn(false);\n                }\n                setChecking(false);\n            });\n        }, [dispatch, setChecking,setIsLoggedIn])\n    if (checking) {\n        return(\n            <h1>Wait...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute isAuthenticated={isLoggedIn} path=\"/auth\" component={AuthRouter} />\n                    <PrivateRoute exact isAuthenticated={isLoggedIn} path=\"/\" component={JornualScreen} />\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n}\n\n\nexport const uiReducer = (state=initialState, action) => {\n\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case types.uiRemoveError:\n            return {\n                ...state,\n                msgError: null\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true\n            }\n        case types.uiFinishLoading:\n            return {\n                ...state,\n                loading: false\n            }\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\n\nconst initialState={\n    notes:[],\n    active:null,\n\n}\n\n\nexport const notesReducer=(state= initialState, action)=>{\n    switch (action.type) {\n        case types.notesActive:\n            return{\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        case types.notesAddNew:\n            return{\n                ...state,\n                notes:[action.payload, ...state.notes]\n            }\n        case types.notesLoad:\n            return{\n                ...state,\n                notes: [...action.payload]\n            }\n        case types.notesUpdated:\n            return{\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                    ? action.payload.note : note\n                )\n            }\n        case types.notesDelete:\n            return{\n                ...state,\n                active:null,\n                notes:state.notes.filter(note=>note.id!== action.payload),\n            }\n        case types.notesLogoutCleaning:\n            return{\n                ...state,\n                active:null,\n                notes:[]\n            }\n        default:\n            return state;\n    }\n}","import thunk from 'redux-thunk';\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport { authReducer } from '../reducers/authReducer';\nimport { uiReducer } from '../reducers/uiReducer';\nimport { notesReducer } from '../reducers/notesReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer,\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n    );\n","import { types } from \"../types/types\";\n\n\nexport const authReducer = ( state = {}, action ) => {\n\n    switch ( action.type ) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n        case types.logout:\n                return { }\n    \n        default:\n            return state;\n    }\n\n}","import React from 'react'\nimport { AppRouter } from './routers/AppRouter'\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const JornualApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter/>\n        </Provider>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JornualApp } from './JornualApp';\nimport './styles/styles.scss';\n\nReactDOM.render(<JornualApp />,document.getElementById('root'));"],"sourceRoot":""}